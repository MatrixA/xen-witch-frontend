/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractAddress,
  ContractAddressInterface,
} from "../../src/ContractAddress";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "callTarget",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35061005b33610060565b6100a0565b600054600160a01b900460ff161561007757600080fd5b600080546001600160a01b039092166001600160a81b031990921691909117600160a01b179055565b6103ed806100af6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806313af40351461005157806319ab453c1461006657806344c30b6a146100795780638da5cb5b146100a2575b600080fd5b61006461005f36600461029e565b6100cd565b005b61006461007436600461029e565b610166565b61008c6100873660046102c0565b6101a6565b6040516100999190610394565b60405180910390f35b6000546100b5906001600160a01b031681565b6040516001600160a01b039091168152602001610099565b6000546001600160a01b0316331461011b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600054600160a01b900460ff161561017d57600080fd5b600080546001600160a01b039092166001600160a81b031990921691909117600160a01b179055565b6000546060906001600160a01b031633146101f25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610112565b600080866001600160a01b03168686866040516102109291906103a7565b60006040518083038185875af1925050503d806000811461024d576040519150601f19603f3d011682016040523d82523d6000602084013e610252565b606091505b50915091508181906102775760405162461bcd60e51b81526004016101129190610394565b509695505050505050565b80356001600160a01b038116811461029957600080fd5b919050565b6000602082840312156102b057600080fd5b6102b982610282565b9392505050565b600080600080606085870312156102d657600080fd5b6102df85610282565b935060208501359250604085013567ffffffffffffffff8082111561030357600080fd5b818701915087601f83011261031757600080fd5b81358181111561032657600080fd5b88602082850101111561033857600080fd5b95989497505060200194505050565b6000815180845260005b8181101561036d57602081850181015186830182015201610351565b8181111561037f576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102b96020830184610347565b818382376000910190815291905056fea2646970667358221220df49e96c020fdbd9ab7aae50c58de5aaee673c1b2d3b37358401985717f8f8d064736f6c634300080d0033";

type ContractAddressConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractAddressConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractAddress__factory extends ContractFactory {
  constructor(...args: ContractAddressConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractAddress> {
    return super.deploy(overrides || {}) as Promise<ContractAddress>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractAddress {
    return super.attach(address) as ContractAddress;
  }
  override connect(signer: Signer): ContractAddress__factory {
    return super.connect(signer) as ContractAddress__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractAddressInterface {
    return new utils.Interface(_abi) as ContractAddressInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractAddress {
    return new Contract(address, _abi, signerOrProvider) as ContractAddress;
  }
}
